org: scraperapi
app: scraper-api
service: crawler
useDotenv: true

plugins:
  - serverless-webpack
  - serverless-webpack-prisma
  - serverless-offline

package:
  individually: true

custom:
  webpack:
    packager: npm
    includeModules: true

provider:
  timeout: 30
  name: aws
  runtime: nodejs16.x
  environment:
    JWT_SECRET: ${param:JWT_SECRET, env:JWT_SECRET, 'secret'}
    JWT_REFRESH_SECRET: ${param:JWT_REFRESH_SECRET, env:JWT_REFRESH_SECRET, 'refreshSecret'}
    DATABASE_URL: ${param:DATABASE_URL, env:DATABASE_URL, 'mysql://root@127.0.0.1:3309/scraper-api'}


functions:
  info:
    handler: src/info.handler
    events:
      - httpApi:
          path: /info
          method: get

  createSitemap: 
    handler: src/sitemap.create
    events:
      - httpApi:
          path: /sitemaps
          method: post

  getSitemaps: 
    handler: src/sitemap.findAll
    events:
      - httpApi:
          path: /sitemaps
          method: get

  getSitemapById: 
    handler: src/sitemap.findById
    events:
      - httpApi:
          path: /sitemaps/{id}
          method: get

  getSitemapResults:
    handler: src/sitemap.getSitemapResults
    events:
      - httpApi:
          path: /sitemaps/{id}/results
          method: get
          

  getSitemapStatus:
    handler: src/sitemap.getSitemapStatus
    events:
      - httpApi:
          path: /sitemaps/{id}/status
          method: get

  updateOrCreateSelector:
    handler: src/selector.updateOrCreate
    events:
      - httpApi:
          path: /sitemaps/{id}/selectors
          method: put

  
  sitemapRoutine:
    timeout: 900
    handler: src/sitemap-routine.handler
    tags:
      timing: onceByHour
    events:
      - schedule: cron(0/5 * ? * * *) # every 5 minutes
      # - schedule: cron(0/5 * ? * * *) # every 5 minutes